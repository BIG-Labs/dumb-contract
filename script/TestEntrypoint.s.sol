// SPDX-License-Identifier: GPL-3.0
pragma solidity ^0.8.23;

import "forge-std/console2.sol";
import "forge-std/Script.sol";
import "../src/AccountFactory.sol";
import "account-abstraction/core/EntryPoint.sol";

contract TestEntrypoint is Script {
    IEntryPoint entryPoint;

    function run() external {
        uint256 deployerPrivateKey = vm.envUint("PRIVATE_KEY");
        vm.startBroadcast(deployerPrivateKey);
        address wallet = vm.addr(deployerPrivateKey);

        entryPoint = IEntryPoint(0xAaA7F3ee35De2e887dcA18dcdb073d6fd86364f4);

        console.log("Relayer balance before:", address(wallet).balance);

        bytes
            memory data = hex"765e827f000000000000000000000000000000000000000000000000000000000000004000000000000000000000000002fd9ad3b0623e36e84c3a0f8e1d81c3bbc155b1000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000006a0105c0bcbfe7df47b966e9e52e6dcb2001d97b000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000140000000000000000000000000002dc6c0000000000000000000000000001e8480000000000000000000000000000000000000000000000000000000000001388000000000000000000000000000b2373e0000000000000000000000000d6e0d42000000000000000000000000000000000000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000007200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000058434fcd5be0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000120000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000044095ea7b3000000000000000000000000681bf6fbc98c779b534925426929bd7cae87c054000000000000000000000000000000000000000000000000016345785d8a000000000000000000000000000000000000000000000000000000000000000000000000000000000000681bf6fbc98c779b534925426929bd7cae87c0540000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000003841e8cbb87000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000000000000000000000000000016345785d8a0000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006a0105c0bcbfe7df47b966e9e52e6dcb2001d97b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007a120000000000000000000000000000000000000000000000000000000000003d0900000000000000000000000000000000000000000000000000000000000000160000000000000000000000000698044f6cc7186d1e2dbef130d20dc6dfba9ecc500000000000000000000000000000000000000000000000000000000000000000000000000000000000000001bb241df1b33a9a5cabb63d81ef0485c17aa0eb30000000000000000000000000000000000000000000000000000000000000000898b8aa8353f2b79ee1de07c36474fcee339003d90fa06ea3a90d9e88b7d7c33000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000016345785d8a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000006a0105c0bcbfe7df47b966e9e52e6dcb2001d97b0000000000000000000000000000000000000000000000000000000070dbd8800000000000000000000000000000000000000000000000000000000000000002000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020701000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000170000000000000000000000000000000000000000000000000000000000000001743474a15fbb8c408aa98f4ae56931d626bdb57a405e122841a51850df52855a136ead5af2bc9efb81505641bc8b7b46f03d3e06d7f3e7f522918bec97226e2b000000000000000000000000000000000000000000000000000000000000002549960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d97631d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008f7b2274797065223a22776562617574686e2e676574222c226368616c6c656e6765223a22415141414141414141506579626e374532456374654673702d752d6a4664634f69686d6d42564e6f346d6f724a306b7536646758222c226f726967696e223a22687474703a2f2f6c6f63616c686f73743a33303031222c2263726f73734f726967696e223a66616c73657d000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

        _call(address(entryPoint), data);

        console.log("Relayer balance after:", address(wallet).balance);
    }

    function _call(address contractAddress, bytes memory data) internal {
        (bool success, bytes memory result) = contractAddress.call(data);
        if (!success) {
            console2.log("Error calling contract:", contractAddress);
            console2.logBytes(result);
        }
    }
}
